{"name":"Backbone-model-composite","tagline":"A class extending Backbone.Model with support for nested models","body":"[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url]\r\n\r\n# Backbone Model Composite\r\n\r\n\r\nThis library is a small extension to the basic [Backbone](http://backbonejs.org/) Model class, which supports nested models.\r\n\r\n## Install\r\n\r\nAs a Node package\r\n```\r\nnpm install backbone-model-composite\r\n```\r\n\r\nWith Bower\r\n```\r\nbower install backbone-model-composite\r\n```\r\n\r\n## Use\r\n\r\n### Child models\r\nDefine child models using a `childModels` hash.\r\n\r\n```javascript\r\nvar ParentModel = Backbone.ModelComposite.extend({\r\n  childModels: {\r\n    firstChild: Backbone.Model,\r\n    secondChild: OtherConstructor\r\n  }\r\n  \r\n  //...\r\n});\r\n```\r\n\r\n\r\nAttributes passed to the parent model's constructor, with keys from `childModels` are used to instantiate its child models.\r\n\r\n```javascript\r\nvar model = new ParentModel({\r\n  firstChild: {\r\n    a: 'abc',\r\n    b: 2\r\n  },\r\n  secondChild: {},\r\n  x: 3\r\n});\r\n\r\nmodel.firstChild.get('a'); // <-- 'abc'\r\nmodel.secondChild.set('hello', 'world');\r\n```\r\n\r\nBy default, attributes used to create child models are removed from the parent object. Pass `preserveChildAttributes` in the constructor's options hash to keep these attributes on the parent.\r\n\r\n### toJson()\r\n\r\n`Backbone.Model`'s `toJSON()` method is overriden to include the nested models. Pass `excludeChildModels` in an options hash to prevent this behavior.\r\n\r\n```javascript\r\nmodel.toJSON(); // <-- {firstChild: {a: 'abc', b: 2}, secondChild: {hello: 'world'}, x: 3}    \r\nmodel.toJSON({excludeChildModels: true}); // <-- {x: 3}    \r\n```\r\n\r\n### Nesting\r\n\r\nMultiple levels of nesting are supported:\r\n\r\n```javascript\r\nvar SecondaryModel = Backbone.ModelComposite.extend({\r\n  childModels: {\r\n    tertiary: Backbone.Model\r\n  }\r\n});\r\n\r\nvar TopModel = Backbone.ModelComposite.extend({\r\n  childModels: {\r\n    secondary: SecondaryModel \r\n  }\r\n});\r\n\r\nvar model = new TopModel({first: 1});\r\nmodel.secondary.set(\"second\", 2);\r\nmodel.secondary.tertiary.set(\"third\", 3);\r\n\r\nmodel.toJSON(); // <-- {first: 1, secondary: {second: 2, tertiary: {third :3}}}\r\n```\r\n\r\n### Event propagation\r\n\r\nThe parent object also emits its children's events, prefixed with the key from the `childModels` hash.\r\n\r\n```javascript\r\nvar model = new ParentModel();\r\nvar handler = function (){};\r\nmodel.on('firstChild:change', handler);\r\nmodel.firstChild.set('a', 123); // handler called\r\n```\r\n\r\n\r\n[npm-url]: https://npmjs.org/package/backbone-model-composite\r\n[npm-image]: https://badge.fury.io/js/backbone-model-composite.png\r\n\r\n[travis-url]: http://travis-ci.org/samolsen/backbone-model-composite\r\n[travis-image]: https://secure.travis-ci.org/samolsen/backbone-model-composite.png?branch=master","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}